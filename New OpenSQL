************************ New Open SQL
SELECT FROM sflight
    FIELDS carrid,
            connid,
            fldate
     WHERE carrid = 'AA'
     INTO TABLE @DATA(lt_data)
     UP TO 10 ROWS.
     

************************ Checking for record in the table using Literals
select SINGLE 'X'
FROM vbak
into @DATA(lv_exist)
WHERE vkorg = ''.
if SY-subrc IS INITIAL.
    
endif.



******************************
REPORT z31_dummy.

TABLES mara.

select-OPTIONS: s_matnr FOR mara-matnr.

data: lt_matnr TYPE RANGE OF matnr,
      ls_matnr LIKE LINE OF lt_matnr,
      lt_range TYPE RANGE OF matnr.

ls_matnr-sign = 'I'.
ls_matnr-option = 'CP'.
ls_matnr-low = 'TG*'.
APPEND ls_matnr TO lt_matnr.

SELECT 'I' as sign,
        'CP' as option,
        matnr as low,
        ' ' as high
    FROM mara
    into TABLE @lt_range
    WHERE matnr in @s_matnr AND matnr in @lt_matnr.
if sy-subrc = 0.
  cl_demo_output=>write( lt_range ).

  SELECT vbeln, posnr, matnr
    FROM vbap
    INTO TABLE @data(lt_data)
    UP TO 20 ROWS
    WHERE matnr in @lt_range.

    cl_demo_output=>display( lt_data ).

endif.




********************************Arithmetic Expression in Select Query
REPORT z31_dummy.

data: lv_discount TYPE p DECIMALS 1 VALUE '0.8'.

SELECT FROM vbak AS so
INNER JOIN vbap AS item
ON so~vbeln = item~vbeln
INNER JOIN kna1 as cust
ON so~kunnr = cust~kunnr
FIELDS so~vbeln AS sales_orde,
       so~kunnr as cust_id,
       cust~name1 as customer,
       item~posnr AS sales_item,
       item~netpr as net_price,
       item~netpr * @lv_discount as net_discounted,
       ceil( item~netpr ) as ceil,
       floor( item~netpr ) as floor,
       abs( item~netpr ) as abs,
       round( item~netpr, 1 ) as round,
       div( cast( item~netpr as int8 ), 10 ) as div,  "operators DIV and MOD cannot be used in expressions that contain real decimal numbers such as NETPR.
       mod( cast( item~netpr as int8 ), 10 ) as mod
  INTO TABLE @data(lt_result)
  UP TO 50 ROWS.

IF sy-subrc is INITIAL.
  cl_demo_output=>display( lt_result ).
ENDIF.




*************************************Aggregation Expression Select Query
REPORT z31_dummy.

SELECT FROM vbak AS so
INNER JOIN vbap AS item
ON so~vbeln = item~vbeln
INNER JOIN kna1 as cust
ON so~kunnr = cust~kunnr
FIELDS so~kunnr AS cust_id,
       cust~name1 as customer,
       item~waerk as currency,
       ( item~netpr + 1 ) as Two,
       sum( item~netpr ) as total_netprice,
       avg( item~netpr ) as average_price,
       max( item~netpr ) as max_price,
       min( item~netpr ) as min_price
  GROUP BY so~kunnr, cust~name1, item~waerk, ( item~netpr + 1 )
  INTO TABLE @data(lt_result)
  UP TO 30 ROWS.

IF sy-subrc is INITIAL.
  cl_demo_output=>display( lt_result ).
ENDIF.




*******************String Operation in Select Query
DELETE FROM zdemo_expr.
    INSERT zdemo_expr FROM TABLE @( VALUE #( ( id = 1 char1 = ' 0123' char2 = 'aAaA' ) ) ).

    SELECT
      FROM zdemo_expr
      FIELDS char1 AS text1,
             char2 AS text2,
             concat( char1, char2 ) AS concatenated,
             CONCAT_WITH_SPACE( char1, char2, 1 ) as concat_with_space,
             length( char1 ) AS text1_length,
             instr( char1, '12' ) AS instr,
             left( char1, 3 ) AS left,
             right( char1, 3 ) AS right,
             lpad( char1, 10, 'X' ) AS lpad,
             Rpad( char1, 10, 'X' ) AS rpad,
             ltrim( char1, ' ' ) AS ltrim,
              rtrim( char2, 'a' ) AS rtrim,
             replace( char2, 'Aa', '--' ) AS replace,
            lower( char2 ) AS lowercase,
            upper( char2 ) AS uppercase,
            substring( char2, 2, 2 ) AS substring
      INTO TABLE @DATA(lt_result).

    IF sy-subrc = 0.
      cl_demo_output=>display( lt_result ).
    ENDIF.




***************************Case Statement in Open SQL
REPORT z31_dummy.

SELECT FROM vbak
  FIELDS vbeln AS sales_order,
         CASE  vbtyp                    "Simple Case
         	  WHEN 'C' THEN 'Order'
         	  WHEN 'B' THEN 'Quotation'
              WHEN 'H' THEN 'Returns'
              ELSE 'Other Doc'
              END AS doc_category,
         netwr as net_amount,
         CASE                        "Searched Case
         	  WHEN netwr > 1000 THEN 'High Amount Doc'
         	  WHEN ( netwr > 500 and  netwr < 1000 ) THEN 'Medium Price'
              ELSE 'Low'
              END AS amount_category
  INTO TABLE @DATA(lt_result).

IF sy-subrc = 0.
  cl_demo_output=>display( lt_result ).
ENDIF.





********************************COALESCE Function in Select
REPORT z31_dummy.

SELECT FROM vbak as so
  LEFT OUTER JOIN vbfa as flow
  ON flow~vbelv = so~vbeln
  AND flow~vbtyp_v = 'C'
  AND flow~vbtyp_n = 'M'
  LEFT OUTER JOIN vbrk as inv
  ON inv~vbeln = flow~vbeln
  FIELDS so~vbeln as sales_order,
        so~netwr as so_amount,
        inv~netwr as inv_amount,
        CASE
        WHEN inv~netwr is NOT NULL THEN inv~netwr
        ELSE so~netwr
        END as net_amount,
        COALESCE( inv~netwr, so~netwr ) as amount_co
  INTO TABLE @data(lt_result).

IF sy-subrc = 0.
  cl_demo_output=>display( lt_result ).
ENDIF.





************************************Host Expression in WHERE Clause
REPORT z31_dummy.

class demo DEFINITION.

  PUBLIC SECTION.
  CLASS-METHODS main.
  CLASS-METHODS class_constructor.
  CLASS-data: lt_scarr type STANDARD TABLE OF scarr.

ENDCLASS.

CLASS demo IMPLEMENTATION.

  METHOD class_constructor.
     SELECT * FROM scarr
       INTO TABLE @lt_scarr.
  ENDMETHOD.

  METHOD main.

    data lv_carrname TYPE scarr-carrname VALUE 'United Airlines'.

    cl_demo_input=>request( CHANGING field = lv_carrname ).

    SELECT FROM spfli
        FIELDS carrid,
               cityfrom,
               cityto
     WHERE carrid = @( value spfli-carrid( lt_scarr[ carrname = lv_carrname ]-carrid OPTIONAL ) )
     INTO TABLE @data(lt_result).

     IF sy-subrc = 0.
        cl_demo_output=>display( lt_result ).
     ENDIF.

  ENDMETHOD.

ENDCLASS.

START-OF-SELECTION.
demo=>main( ).





***********************************CLIENT Handling in OpenSQL
SELECT FROM spfli
      USING CLIENT '100'
        FIELDS carrid,
               cityfrom,
               cityto
     WHERE carrid = 'UA'
     INTO TABLE @data(lt_result).





*******************************CROSS JOIN
select
  FROM t000 as clnt
  CROSS JOIN t100 as msg
  FIELDS clnt~mandt as client,
         clnt~mtext as descr,
         msg~msgnr  as msgno
  WHERE msg~arbgb = 'SABAPDEMOS'
  into TABLE @data(lt_result).

IF sy-subrc = 0.
 cl_demo_output=>display( lt_result ).
ENDIF.




*******************************Group By Clause
SELECT
   FROM vbak AS so
   INNER JOIN kna1 AS cust
   ON so~kunnr = cust~kunnr
   FIELDS so~kunnr AS cust_id,
         cust~name1 AS customer,
         so~netwr as price,
         so~waerk AS currency,
         COUNT( so~netwr ) AS count,
         CASE
             WHEN so~netwr > 1000 THEN 'High Amount Doc'
         	   WHEN ( so~netwr > 500 AND  so~netwr < 1000 ) THEN 'Medium Price'
             ELSE 'Low'
             END AS amount_category
  "where so~kunnr = 'USCU_L01'
  GROUP BY so~kunnr, cust~name1,so~waerk,so~netwr,
        CASE
             WHEN so~netwr > 1000 THEN 'High Amount Doc'
         	   WHEN ( so~netwr > 500 AND  so~netwr < 1000 ) THEN 'Medium Price'
             ELSE 'Low'
             END
  INTO TABLE @DATA(lt_result).





*********************************HAVING Clause
SELECT
   FROM vbak AS so
   INNER JOIN kna1 AS cust
   ON so~kunnr = cust~kunnr
   FIELDS so~kunnr AS cust_id,
         cust~name1 AS customer,
         "so~waerk,
         sum( so~netwr ) AS total,
         avg( so~netwr ) AS avg,
         max( so~netwr ) AS max,
         min( so~netwr ) AS min,
         COUNT( so~netwr ) AS count
   GROUP BY so~kunnr, cust~name1,so~waerk
   Having sum( so~netwr ) > 5000 and so~waerk = 'USD'
   INTO TABLE @DATA(lt_result).





************************* Union
SELECT FROM sflight INNER JOIN spfli
    ON sflight~carrid = spfli~carrid
    AND  sflight~connid = spfli~connid
    FIELDS sflight~carrid,
           sflight~connid,
           sflight~fldate,
           spfli~cityfrom,
           spfli~cityto
    WHERE spfli~cityfrom = 'FRANKFURT'

UNION

SELECT FROM sflight  INNER JOIN spfli
   ON sflight~carrid = spfli~carrid
   AND sflight~connid = spfli~connid
   FIELDS sflight~carrid,
          sflight~connid,
          sflight~fldate,
          spfli~cityfrom,
          spfli~cityto
    WHERE spfli~cityfrom = 'SAN FRANCISCO'
INTO TABLE @DATA(lt_flights).

cl_demo_output=>write( lines( lt_flights ) ).
cl_demo_output=>display( lt_flights ).



